package me.feng3d.core.partition
{
	import me.feng3d.arcane;
	import me.feng3d.core.math.Plane3D;
	import me.feng3d.entities.Entity;

	use namespace arcane;

	/**
	 *
	 * @author warden_feng 2015-3-8
	 */
	public class EntityNode extends NodeBase
	{
		private var _entity:Entity;

		/**
		 * The link to the next object in the list to be updated
		 * @private
		 */
		arcane var _updateQueueNext:EntityNode;

		/**
		 * Creates a new EntityNode object.
		 * @param entity The Entity to be contained in this leaf node.
		 */
		public function EntityNode(entity:Entity)
		{
			super();
			_entity = entity;
			_numEntities = 1;
		}

		/**
		 * Detaches the node from its parent.
		 */
		public function removeFromParent():void
		{
			if (_parent)
				_parent.removeNode(this);

			_parent = null;
		}

		/**
		 * The entity contained in this leaf node.
		 */
		public function get entity():Entity
		{
			return _entity;
		}
		
		override public function isInFrustum(planes:Vector.<Plane3D>, numPlanes:int):Boolean
		{
			if (!_entity.isVisible)
				return false;
			
			return _entity.worldBounds.isInFrustum(planes, numPlanes);
		}
		
	}
}
